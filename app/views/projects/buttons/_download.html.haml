- pipeline = local_assigns.fetch(:pipeline) { project.latest_successful_pipeline_for(ref) }

- if !project.empty_repo? && can?(current_user, :download_code, project)
  - archive_prefix = "#{project.path}-#{ref.tr('/', '-')}"
  .project-action-button.dropdown.inline>
    %button.btn.has-tooltip{ title: s_('DownloadSource|Download'), 'data-toggle' => 'dropdown', 'aria-label' => s_('DownloadSource|Download'), 'data-display' => 'static' }
      = sprite_icon('download')
      %span.sr-only=  _('Select Archive Format')
      = sprite_icon("arrow-down")
    %ul.dropdown-menu.dropdown-menu-right{ role: 'menu' }
      %li.dropdown-header
        #{ _('Source code') }
      %li
        = link_to project_archive_path(project, id: tree_join(ref, archive_prefix), format: 'zip'), rel: 'nofollow', download: '' do
          %span=  _('Download zip')
      %li
        = link_to project_archive_path(project, id: tree_join(ref, archive_prefix), format: 'tar.gz'), rel: 'nofollow', download: '' do
          %span= _('Download tar.gz')
      %li
        = link_to project_archive_path(project, id: tree_join(ref, archive_prefix), format: 'tar.bz2'), rel: 'nofollow', download: '' do
          %span= _('Download tar.bz2')
      %li
        = link_to project_archive_path(project, id: tree_join(ref, archive_prefix), format: 'tar'), rel: 'nofollow', download: '' do
          %span= _('Download tar')

      - if pipeline && pipeline.latest_builds_with_artifacts.any?
        %li.dropdown-header Artifacts
        - unless pipeline.latest?
          - latest_pipeline = project.pipeline_for(ref)
          %li
            .unclickable= ci_status_for_statuseable(latest_pipeline)
          %li.dropdown-header Previous Artifacts
        - pipeline.latest_builds_with_artifacts.each do |job|
          %li
            = link_to latest_succeeded_project_artifacts_path(project, "#{ref}/download", job: job.name), rel: 'nofollow', download: '' do
              %span
                #{s_('DownloadArtifacts|Download')} '#{job.name}'
